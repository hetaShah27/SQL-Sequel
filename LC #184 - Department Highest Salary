The Employee table holds all employees. Every employee has an Id, a salary, and there is also a column for the department Id.

Create table If Not Exists Employee (Id int, Name varchar(255), Salary int, DepartmentId int)
Truncate table Employee
insert into Employee (Id, Name, Salary, DepartmentId) values ('1', 'Joe', '70000', '1')
insert into Employee (Id, Name, Salary, DepartmentId) values ('2', 'Jim', '90000', '1')
insert into Employee (Id, Name, Salary, DepartmentId) values ('3', 'Henry', '80000', '2')
insert into Employee (Id, Name, Salary, DepartmentId) values ('4', 'Sam', '60000', '2')
insert into Employee (Id, Name, Salary, DepartmentId) values ('5', 'Max', '90000', '1')
+----+-------+--------+--------------+
| Id | Name  | Salary | DepartmentId |
+----+-------+--------+--------------+
| 1  | Joe   | 70000  | 1            |
| 2  | Jim   | 90000  | 1            |
| 3  | Henry | 80000  | 2            |
| 4  | Sam   | 60000  | 2            |
| 5  | Max   | 90000  | 1            |
+----+-------+--------+--------------+

The Department table holds all departments of the company.

Create table If Not Exists Department (Id int, Name varchar(255))
Truncate table Department
insert into Department (Id, Name) values ('1', 'IT')
insert into Department (Id, Name) values ('2', 'Sales')
+----+----------+
| Id | Name     |
+----+----------+
| 1  | IT       |
| 2  | Sales    |
+----+----------+

Write a SQL query to find employees who have the highest salary in each of the departments. For the above tables, your SQL query should return the following rows (order of rows does not matter).
+------------+----------+--------+
| Department | Employee | Salary |
+------------+----------+--------+
| IT         | Max      | 90000  |
| IT         | Jim      | 90000  |
| Sales      | Henry    | 80000  |
+------------+----------+--------+

Explanation:
Max and Jim both have the highest salary in the IT department and Henry has the highest salary in the Sales department.


Solution:
/* MySQL query for MySQL, T-SQL query for MS SQL Server: */
SELECT sub.Department, sub.Employee, sub.Salary
FROM (SELECT d.Name AS "Department", e.Name AS "Employee", Salary, DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY Salary DESC) AS sal_rank
        FROM Department d
        JOIN Employee e
            ON d.Id = e.DepartmentId) sub
WHERE sub.sal_rank = 1;

/* PL/SQL query for Oracle: */
WITH cte AS (SELECT d.Name AS Department, e.Name AS Employee, Salary, DENSE_RANK() OVER (PARTITION BY e.DepartmentId ORDER BY Salary DESC) AS sal_rank
                FROM Department d
                JOIN Employee e
                    ON d.Id = e.DepartmentId)
SELECT Department, Employee, Salary
FROM cte
WHERE cte.sal_rank = 1;
