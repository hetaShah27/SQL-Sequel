SQL Schema

Table: Weather
Create table If Not Exists Weather (Id int, RecordDate date, Temperature int)
Truncate table Weather
insert into Weather (Id, RecordDate, Temperature) values ('1', '2015-01-01', '10')
insert into Weather (Id, RecordDate, Temperature) values ('2', '2015-01-02', '25')
insert into Weather (Id, RecordDate, Temperature) values ('3', '2015-01-03', '20')
insert into Weather (Id, RecordDate, Temperature) values ('4', '2015-01-04', '30')
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+
id is the primary key for this table.
This table contains information about the temperature in a certain day.


Write an SQL query to find all dates' id with higher temperature compared to its previous dates (yesterday).
Return the result table in any order.
The query result format is in the following example:
Weather
+----+------------+-------------+
| id | recordDate | Temperature |
+----+------------+-------------+
| 1  | 2015-01-01 | 10          |
| 2  | 2015-01-02 | 25          |
| 3  | 2015-01-03 | 20          |
| 4  | 2015-01-04 | 30          |
+----+------------+-------------+

Result table:
+----+
| id |
+----+
| 2  |
| 4  |
+----+
In 2015-01-02, temperature was higher than the previous day (10 -> 25).
In 2015-01-04, temperature was higher than the previous day (30 -> 20).


Solution:
# Write your MySQL query statement below
SELECT w1.id
FROM Weather w1
JOIN Weather w2
    ON w1.recordDate = w2.recordDate + INTERVAL 1 DAY
WHERE w1.Temperature > w2.Temperature;

/* Write your T-SQL query statement below */
SELECT w1.Id
FROM Weather w1
JOIN Weather w2
    ON DATEDIFF(DAY, w2.recordDate, w1.recordDate) = 1
WHERE w1.Temperature > w2.Temperature;

/* Write your PL/SQL query statement below */
SELECT w1.id
FROM Weather w1
JOIN Weather w2
    ON w1.recordDate = w2.recordDate + INTERVAL '1' DAY
WHERE w1.Temperature > w2.Temperature;
